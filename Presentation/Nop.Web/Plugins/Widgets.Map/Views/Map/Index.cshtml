<style>
    #map_canvas_cr {
        width: 90%;
        height: 500px;
        position: relative;
        overflow: hidden;
        margin: 1rem auto;
    }

    #map_canvas {
        width: 100%;
        height: 100%;
    }

    #addressInputGotByMap {
        width: 70%;
        margin-top: 0.6rem;
        height: 2.6rem;
        position: absolute;
        right: 0 !important;
        display: block;
        text-align: right;
        padding: .5rem;
        font-size: 1.1rem;
        border: 1px solid #e2e2e2;
        border-radius: 3px;
        box-shadow: 0 0 3px 0px #b2b2b2;
    }

    #map_results_cr {
        position: absolute;
        left: 1rem;
        bottom: 1rem;
        z-index: 10;
        background: #000000c2;
        max-height: 70%;
        height: auto;
        overflow-y: auto;
        overflow-x: hidden;
        width: 47%;
    }

    #map_results {
        color: white;
        padding-left: 0;
        margin: 0;
    }

        #map_results li {
            width: 100%;
            height: auto;
            padding: 1rem;
            cursor: pointer;
        }

            #map_results li:hover {
                background-color: rgb(250 250 250 / 11%);
            }

    #results_title {
        background-color: #ffffff45;
        margin: 0;
        padding: 1rem;
        color: white;
        font-weight: bold;
        font-size: 1rem;
        cursor: pointer;
        display: flex;
        justify-content: space-between;
    }

    hr {
        margin: 0;
    }
</style>

<div id="map_canvas_cr">
    <div id="map_canvas"></div>
    <div id="map_results_cr">
        <div id="results_title">
            <span>Results</span>
            <span id="results_title_toggle">▲</span>
        </div>

        <hr>
        <ul id="map_results" type=none>
        </ul>
    </div>
</div>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDbwcRdDylRg2IoZhU9_LmWa7dD6YL85Xk&callback=initMap&libraries=places&language=ar"
        async></script>
<script>
    function initMap() {
        let myLatlng = { lat: 24.7135517, lng: 46.6752957 };
        const SAUDI_ARABIA_BOUNDS = {//32.1205,34.4853;16.3209,55.8428
            north: 34,
            south: 15,
            west: 34,
            east: 57
        };
        const map = new google.maps.Map(document.getElementById("map_canvas"), {
            center: myLatlng,
            zoom: 8,
            mapTypeId: "roadmap",
            restriction: {
                latLngBounds: SAUDI_ARABIA_BOUNDS,
                strictBounds: true,
            },

        });
        const geocoder = new google.maps.Geocoder();

        // Create the search box and link it to the UI element.
        const input = document.getElementById("addressInputGotByMap");
        const searchBox = new google.maps.places.SearchBox(input);
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
        // Bias the SearchBox results towards current map's viewport.
        map.addListener("bounds_changed", () => {
            searchBox.setBounds(map.getBounds());
        });
        let markers = [];
        let marker = new google.maps.Marker({
            draggable: true,
            position: myLatlng,
            map: map,
            title: "Default location"
        });
        // Listen for the event fired when the user selects a prediction and retrieve
        // more details for that place.
        searchBox.addListener("places_changed", () => {
            const places = searchBox.getPlaces();

            if (places.length == 0) {
                return;
            }
            // Clear out the old markers.
            markers.forEach((marker) => {
                marker.setMap(null);
            });
            markers = [];
            // For each place, get the icon, name and location.
            const bounds = new google.maps.LatLngBounds();
            places.forEach((place) => {
                if (!place.geometry || !place.geometry.location) {
                    console.log("Returned place contains no geometry");
                    return;
                }
                const icon = {
                    url: place.icon,
                    size: new google.maps.Size(71, 71),
                    origin: new google.maps.Point(0, 0),
                    anchor: new google.maps.Point(17, 34),
                    scaledSize: new google.maps.Size(25, 25),
                };
                // Create a marker for each place.
                markers.push(
                    new google.maps.Marker({
                        map,
                        icon,
                        title: place.name,
                        position: place.geometry.location,
                    })
                );

                if (place.geometry.viewport) {
                    // Only geocodes have viewport.
                    bounds.union(place.geometry.viewport);
                } else {
                    bounds.extend(place.geometry.location);
                }

                console.log(place.geometry.location.lat() + "," + place.geometry.location.lng())
                $('#lat_inp').val(place.geometry.location.lat());
                $('#lng_inp').val(place.geometry.location.lng());
            });
            map.fitBounds(bounds);
        });

        //++++++++ get current position

        // infoWindow = new google.maps.InfoWindow();
        // const locationButton = document.createElement("button");
        // locationButton.textContent = "Pan to Current Location";
        // locationButton.classList.add("custom-map-control-button");
        // map.controls[google.maps.ControlPosition.TOP_CENTER].push(locationButton);
        // locationButton.addEventListener("click", () => {
        //     // Try HTML5 geolocation.
        //     if (navigator.geolocation) {
        //         navigator.geolocation.getCurrentPosition(
        //             (position) => {
        //                 const pos = {
        //                     lat: position.coords.latitude,
        //                     lng: position.coords.longitude,
        //                 };
        //                 infoWindow.setPosition(pos);
        //                 infoWindow.setContent("Location found.");
        //                 infoWindow.open(map);
        //                 map.setCenter(pos);
        //             },
        //             () => {
        //                 handleLocationError(true, infoWindow, map.getCenter());
        //             }
        //         );
        //     } else {
        //         // Browser doesn't support Geolocation
        //         handleLocationError(false, infoWindow, map.getCenter());
        //     }
        // });


        // function handleLocationError(browserHasGeolocation, infoWindow, pos) {
        //     infoWindow.setPosition(pos);
        //     infoWindow.setContent(
        //         browserHasGeolocation
        //             ? "Error: The Geolocation service failed."
        //             : "Error: Your browser doesn't support geolocation."
        //     );
        //     infoWindow.open(map);
        // }
        //--------end get curr pos
        //++++++++++ Configure the click listener add marker.
        map.addListener("click", (mapsMouseEvent) => {
            const latlngObj = mapsMouseEvent.latLng.toJSON();
            $('#lat_inp').val(latlngObj.lat);
            $('#lng_inp').val(latlngObj.lng);
            console.log(latlngObj)
            marker.setPosition(latlngObj);
            getAddressByLocation(latlngObj.lat + "," + latlngObj.lng);
        });

        function getAddressByLocation(latlng) {
            geocoder.geocode({ 'address': latlng }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    if (status != google.maps.GeocoderStatus.ZERO_RESULTS) {
                        $('#map_results').html('');
                        for (let address of results) {
                            $('#map_results').append(`<li>${address.formatted_address}</li>`)
                        }
                        // var infowindow = new google.maps.InfoWindow(
                        //     {
                        //         content: '<b>' + address + '</b>',
                        //         size: new google.maps.Size(150, 50)
                        //     });

                        // var marker = new google.maps.Marker({
                        //     position: results[0].geometry.location,
                        //     map: map,
                        //     title: address
                        // });
                        // google.maps.event.addListener(marker, 'click', function () {
                        //     infowindow.open(map, marker);
                        // });

                    } else {
                        console.log("No results found");
                    }
                } else {
                    alert("Geocode was n    ot successful for the following reason: " + status);
                }
            });
        }


        $(document).on("click", '#map_results li', function () {
            console.log('li clicked')
            console.log($(this).text())
            $('#addressInputGotByMap').val($(this).text())
        })

        $('#results_title').click(function () {
            $("#map_results").slideToggle(300);
            arrowIcon = $('#results_title_toggle').text();
            if (arrowIcon == "▲")
                $('#results_title_toggle').text("▼");
            else
                $('#results_title_toggle').text("▲");
        })

        $(document).on('change', '#addressInputGotByMap', function () {
            console.log("on change map search:", $(this).val())
            $("#addressInputByMap").val($(this).val())
        })

        //**end
    }

</script>